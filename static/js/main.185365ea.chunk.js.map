{"version":3,"sources":["components/Form.js","components/ListItem.js","components/Todos.js","components/Filter.js","App.js","index.js"],"names":["Form","setInputText","inputText","setTodos","todos","onSubmit","e","preventDefault","text","completed","id","length","value","onChange","target","type","class","aria-hidden","listItem","todo","className","onClick","map","item","filter","stateTodo","Todos","filteredTodos","ListItem","key","Filter","setFilterStatus","name","App","useState","status","setFilteredTodos","useEffect","console","log","filterHandler","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAuBeA,EArBH,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,aAAcC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MAa/C,OACA,0BAAMC,SATc,SAACC,GACnBA,EAAEC,iBACFJ,EAAS,GAAD,mBACHC,GADG,CAEN,CAACI,KAAKN,EAAUO,WAAU,EAAMC,GAAGN,EAAMO,WAE3CV,EAAa,MAIjB,2BAAOW,MAAQV,EAAWW,SAbA,SAACP,GACvBL,EAAaK,EAAEQ,OAAOF,QAY4BG,KAAK,SAC3D,4BAAQA,KAAK,UAAS,uBAAGC,MAAM,wBAAwBC,cAAY,Y,OCiCpDC,EAhDC,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,KAAKf,EAAmB,EAAnBA,MAAOD,EAAY,EAAZA,SA8B5B,OACF,yBAAKiB,UAAU,uBACX,wBAAIA,UAAS,qBAAgBD,EAAKV,UAAY,OAAS,KAAOU,EAAKX,KAAnE,KACJ,8BAEA,4BAAQa,QA3BgB,WAWxBlB,EAASC,EAAMkB,KAAI,SAACC,GAClB,OAAIA,EAAKb,KAAOS,EAAKT,GACrB,2BACKa,GADL,IAEEd,WAAYc,EAAKd,YAGZc,QAS2B,uBAAGP,MAAM,cAAcC,cAAY,UAFvE,IAE4F,4BAAQI,QAjC7E,WAIvBlB,EAASC,EAAMoB,QAAO,SAACC,GAAD,OAAaA,EAAUf,KAAOS,EAAKT,SA6BsE,uBAAGM,MAAM,cAAcC,cAAY,aChBnJS,EApBD,SAAC,GAAmC,IAAlCtB,EAAiC,EAAjCA,MAAOD,EAA0B,EAA1BA,SAASwB,EAAiB,EAAjBA,cAC9B,OACE,yBAAKP,UAAU,mBACf,4BAEFO,EAAcL,KAAI,SAAAH,GAChB,OAAS,kBAACS,EAAD,CAAUT,KAAMA,EAAMf,MAAOA,EAAOD,SAAUA,EAAU0B,IAAKV,EAAKT,WCWhEoB,EAhBF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,gBAIb,OACE,yBAAKX,UAAU,UACf,4BAAQP,SALO,SAACP,GAClByB,EAAgBzB,EAAEQ,OAAOF,QAISoB,KAAK,GAAGtB,GAAG,IAC3C,4BAAQE,MAAM,OAAd,OACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,aAAd,gBC2CWqB,MAjDf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNhC,EADM,KACKD,EADL,OAEaiC,mBAAS,IAFtB,mBAEN9B,EAFM,KAECD,EAFD,OAIoB+B,mBAAS,OAJ7B,mBAIPC,EAJO,KAICJ,EAJD,OAM0BG,mBAAS,IANnC,mBAMTP,EANS,KAMMS,EANN,KAuCb,OATFC,qBAAU,WACRC,QAAQC,IAAI,GArBM,WAClB,OAAQJ,GACN,IAAK,YACHC,EAAiBhC,EAAMoB,QAAO,SAAAD,GAAI,OAAqB,IAAnBA,EAAKd,cACzC,MACA,IAAK,cACH2B,EAAiBhC,EAAMoB,QAAO,SAAAD,GAAI,OAAqB,IAAnBA,EAAKd,cACzC,MACF,QACA2B,EAAiBhC,IAavBoC,KACE,CAACpC,EAAM+B,IAOL,yBAAKf,UAAU,OACf,uDACE,kBAAC,EAAD,CAAMhB,MAAOA,EAAMD,SAAUA,EAAUD,UAAWA,EAAWD,aAAcA,IAC3E,kBAAC,EAAD,CAAOE,SAAUA,EAAUC,MAAOA,EAAOuB,cAAeA,IACxD,kBAAC,EAAD,CAASI,gBAAiBA,MC5ChCU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.185365ea.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form =({setInputText, inputText, setTodos, todos})=>{\r\n  //handlers\r\n  const inputTextHandler =(e)=>{\r\n    setInputText(e.target.value);\r\n  }\r\n  const submitHandler=(e)=>{\r\n    e.preventDefault();\r\n    setTodos([\r\n      ...todos,\r\n      {text:inputText,completed:false,id:todos.length}\r\n    ])\r\n    setInputText('');\r\n  }\r\n  return(\r\n  <form onSubmit={submitHandler}>\r\n<input value ={inputText} onChange={inputTextHandler} type=\"text\"/>\r\n<button type='submit'><i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i></button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react'\r\n\r\n\r\nconst listItem =({todo,todos, setTodos})=>{\r\n\r\nconst handleRemoveTodo=()=>{\r\n  //this filter will return all todos that\r\n  //DO NOT MATCH\r\n  //the seleted todo item's id property\r\nsetTodos(todos.filter((stateTodo)=>stateTodo.id !== todo.id))\r\n}\r\nconst handleConfirmTodo=()=>{\r\n  //map over every todo\r\n  //check IF\r\n  //the the current item === the selected todo's id\r\n  //if true\r\n  //return the todo with all its previous properties\r\n  // using the ...todo (spread operator)\r\n  //then change the property being manipulated\r\n  //ELSE\r\n  //return the item unchanged and continue the iteration\r\n  //over the todo items\r\nsetTodos(todos.map((item)=>{\r\n  if (item.id === todo.id) {\r\n  return{\r\n    ...item,\r\n    completed: !item.completed,\r\n  }\r\n  }\r\n  return item\r\n}))\r\n\r\n}\r\n  return(\r\n<div className=\"list-Item-Container\">\r\n    <li className={` todo-item ${todo.completed ? \"done\" : \"\"}`}>{todo.text} </li>\r\n<span>\r\n\r\n<button onClick={handleConfirmTodo}><i class=\"fa fa-check\" aria-hidden=\"true\"></i></button> <button onClick={handleRemoveTodo}><i class=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n</button>\r\n\r\n\r\n</span>\r\n</div>\r\n\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default listItem;\r\n","import React from 'react'\r\nimport ListItem from './ListItem.js'\r\nconst Todos = ({todos, setTodos,filteredTodos})=>{\r\n  return(\r\n    <div className=\"todos-Container\">\r\n    <ul>\r\n  {\r\n  filteredTodos.map(todo=>{\r\n    return(  <ListItem todo={todo} todos={todos} setTodos={setTodos} key={todo.id} />)\r\n\r\n  }\r\n\r\n  )\r\n  }\r\n\r\n    </ul>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Todos;\r\n","import React from 'react'\r\n\r\n\r\nconst Filter=({setFilterStatus})=>{\r\nconst handleFilter=(e)=>{\r\n  setFilterStatus(e.target.value)\r\n}\r\n  return(\r\n    <div className=\"filter\">\r\n    <select onChange={handleFilter} name=\"\" id=\"\">\r\n    <option value=\"all\">All</option>\r\n    <option value=\"uncompleted\">Uncompleted</option>\r\n    <option value=\"completed\">Completed</option>\r\n    </select>\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Filter\r\n","import React,{useState,useEffect} from 'react';\nimport './App.css';\n//import components\nimport Form from './components/Form'\nimport Todos from './components/Todos'\nimport Filter from './components/Filter'\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  //create a swithc to track the status of the filter input\n  const[status, setFilterStatus] = useState('all')\n//create a state holding the filtered todos\nconst[filteredTodos, setFilteredTodos] = useState([]);\n\n//functions and events\n\nconst filterHandler=()=>{\n  switch (status){\n    case 'completed':\n      setFilteredTodos(todos.filter(item=>item.completed === true));\n      break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(item=>item.completed === false));\n        break;\n      default:\n      setFilteredTodos(todos);\n      break;\n  }\n\n}\n//useEffect\n//if [] is the second param then it will execute only\n//once the app is first rendered\n//if the [] has state or multiple states in it [state]//[state,state2]\n//the code will run everytime that state changed\n//in this case run efverytime tht filter option is changed\nuseEffect(()=>{\n  console.log(1);\nfilterHandler();\n},[todos,status])\n\n\n//Add functionallity\n//that will save the list of todos and keep the data even if page is refreshed\n//use local storage.\n  return (\n    <div className=\"App\">\n    <h1> \\Somone's ToDo List\\</h1>\n      <Form todos={todos}setTodos={setTodos} inputText={inputText} setInputText={setInputText}/>\n      <Todos setTodos={setTodos} todos={todos} filteredTodos={filteredTodos}/>\n      <Filter  setFilterStatus={setFilterStatus}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}